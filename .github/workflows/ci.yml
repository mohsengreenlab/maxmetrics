name: CI (Build + DB + Smoke)
on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: maxmetrics_user
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          POSTGRES_DB: maxmetrics_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U maxmetrics_user -d maxmetrics_db"
          --health-interval=10s --health-timeout=5s --health-retries=10

    env:
      NODE_ENV: production
      PORT: 3008
      SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
      GOOGLE_PAGESPEED_API_KEY: ${{ secrets.GOOGLE_PAGESPEED_API_KEY }}
      PGHOST: localhost
      PGPORT: 5432
      PGUSER: maxmetrics_user
      PGPASSWORD: ${{ secrets.DB_PASSWORD }}
      PGDATABASE: maxmetrics_db
      DATABASE_URL: postgres://maxmetrics_user:${{ secrets.DB_PASSWORD }}@localhost:5432/maxmetrics_db

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install deps
        run: npm ci

      - name: DB schema push
        run: npm run db:push

      - name: Build (frontend + backend)
        run: npm run build

      - name: Verify build artifacts
        run: |
          test -f dist/index.js || (echo "Missing dist/index.js" && exit 1)
          test -d client/dist || (echo "Missing client/dist" && exit 1)

      - name: Start server
        run: |
          node dist/index.js > server.log 2>&1 &
          echo $! > server.pid

      - name: Wait for port 3008
        run: |
          for i in {1..90}; do (echo > /dev/tcp/127.0.0.1/3008) >/dev/null 2>&1 && exit 0; sleep 1; done
          echo "Server didn't open port 3008"; echo "--- server.log ---"; cat server.log; exit 1

      - name: Smoke test /api/check
        run: |
          curl -fsS "http://127.0.0.1:3008/api/check?url=https://example.com" | head -c 2000

      - name: Upload logs & dist
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ci-artifacts
          path: |
            server.log
            client/dist
